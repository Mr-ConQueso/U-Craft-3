{
	"credit": "Made with Blockbench",
	"textureSize": [64, 32],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4, 24, -4, 8, 10, 8],
					"uvNorth": [8, 8, 16, 16],
					"uvEast": [0, 8, 8, 16],
					"uvSouth": [24, 8, 32, 16],
					"uvWest": [16, 8, 24, 16],
					"uvUp": [16, 8, 8, 0],
					"uvDown": [24, 0, 16, 8],
					"sizeAdd": 1
				},
				{
					"coordinates": [-4, 24, -4, 8, 10, 8],
					"uvNorth": [40, 8, 48, 16],
					"uvEast": [32, 8, 40, 16],
					"uvSouth": [56, 8, 64, 16],
					"uvWest": [48, 8, 56, 16],
					"uvUp": [48, 8, 40, 0],
					"uvDown": [56, 0, 48, 8],
					"sizeAdd": 1.25
				}
			],
			"animations": [
				{
					"var.swim": "limb_swing/2 +age/4",
					"var.pose": "if(is_riding||is_in_water&&!is_on_ground, 0, clamp(1-limb_speed*4, 0, 1))*clamp(random(id)+0.3, 0.3, 1)",
					"var.nov2": "clamp(-39 +cos(-pi/4 +var.r +var.b/20)*40, 0, 1)*clamp(1-limb_speed*2, 0, 1)",
					"var.r": "(pi*random(id)*4) +(limb_swing/20)*0",
					"var.b": "age /(11 -random(id)*2)*if(is_child, 1.5, 1)",
					"var.ls": "limb_swing/if( limb_speed>0.75, 1.4 +(0.2*random(id)), 1.1 +(0.2*random(id)))",
					"var.att": "if(is_aggressive, if(left_arm.ry>=torad(10), -1, right_arm.ry<=torad(-10), 1, 2), 0 )"
				},
				{
					"right_arm.rx": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,torad(-50) -cos(var.swim)/4*clamp(1-limb_speed*8, 0, 1) +(cos(var.swim +sin(var.swim)) +torad(30))*clamp(limb_speed*8, 0, 1), if(var.att==-1, torad(-80) +torad(head_pitch), var.att==1, torad(-90 ) +torad(head_pitch), var.att==2, torad(head_yaw)/8 -sin(limb_swing/1.3)/6*limb_speed +sin(torad(90)+limb_swing/0.65)/6*limb_speed +clamp(torad(-135)*limb_speed, torad(-90), 0), if(is_riding, torad(-8 ),  torad(head_yaw)/8 -sin(limb_swing/1.3)*limb_speed) ) +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2-torad(60))/20) -(sin(pi*2*swing_progress)))",
					"left_arm.rx": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,torad(-50) -cos(var.swim)/4*clamp(1-limb_speed*8, 0, 1) +(cos(var.swim +sin(var.swim)) +torad(30))*clamp(limb_speed*8, 0, 1),  if(var.att==-1, torad(-90 ) +torad(head_pitch), var.att==1, torad(-100) +torad(head_pitch), var.att==2,-torad(head_yaw)/8 +sin(limb_swing/1.3)/6*limb_speed +sin(torad(90)+limb_swing/0.65)/6*limb_speed +clamp(torad(-135)*limb_speed, torad(-90), 0), if(is_riding, torad(-35), -torad(head_yaw)/8 +sin(limb_swing/1.3)*limb_speed) ) +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2-torad(60))/20) +(sin(pi*swing_progress)*2))",
					"right_arm.ry": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,torad( 30) -sin(var.swim +cos(var.swim)/4)  *clamp(1-limb_speed*8, 0, 1) +(torad( 5) +cos(pi/8 +var.swim +sin(var.swim)/2 )/2 +clamp(-sin(var.swim),-pi/2, 0) )*clamp(limb_speed*8, 0, 1),if(var.att==-1, torad(-25), var.att==1, torad(-20), body.ry +sin((limb_swing/2+age)/80*pi*2+torad(90))/20) +(sin(-pi/2*swing_progress*2)/4))",
					"left_arm.ry": " if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,torad(-30) +sin(var.swim +cos(var.swim)/4)  *clamp(1-limb_speed*8, 0, 1) +(torad(-5) -cos(pi/8 +var.swim +sin(var.swim)/2 )/2 +clamp( sin(var.swim), 0, pi/2) )*clamp(limb_speed*8, 0, 1),if(var.att==-1, torad( 20), var.att==1, 0, body.ry +sin((limb_swing/2+age)/80*pi*2-torad(90))/20))",
					"right_arm.rz": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water, -cos(var.swim)/2 +(torad( 20) +cos(var.swim)/2)  *clamp(  limb_speed*8, 0, 1), if(var.att==-1, torad(-8), var.att==1, torad(-5), is_riding, torad( 35), torad( 5) +if(is_in_water, torad( 10), 0) +clamp(-torad(head_pitch)/8, 0, torad( 45)) ) +(sin(-pi+torad(90)*swing_progress*2)))",
					"left_arm.rz": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water, cos(var.swim)/2 +(torad(-20) -cos(var.swim)/2)  *clamp(  limb_speed*8, 0, 1), if(var.att==-1, torad( 5), var.att==1, torad( 8), is_riding, torad( 10), torad(-5) +if(is_in_water, torad(-10), 0) +clamp( torad(head_pitch)/8, torad(-45), 0) ) -(sin(pi*swing_progress)))",
					"right_arm.tx": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,-5.95,if(var.att==-1, -5.95, var.att==1, -5.95, -5.95) +(sin(pi*swing_progress)*2))",
					"left_arm.tx": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,5.95, if(var.att==-1,  5.95, var.att==1,  1.95, 5.95 +body.tx) -(sin(pi*swing_progress)*2))",
					"right_arm.ty": "if(var.att==-1||var.att==1, 2, 2.5 +sin((limb_swing/2+age)/80*pi*2-torad(60))/5) +body.ty",
					"left_arm.ty": " if(var.att==-1||var.att==1, 2, 2.5 +sin((limb_swing/2+age)/80*pi*2-torad(60))/5) +body.ty +if(is_riding, 1, 0)",
					"right_arm.tz": "if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,-1,+1.5+if(var.att==-1, -6, var.att==1, -1, -0.5 +if(is_riding, 0, clamp(-1+limb_speed, -1, 0)) +sin(torad(135+90)+limb_swing/1.3)*2*limb_speed +sin((limb_swing/2+age)/80*-pi*2)/4) +if(is_riding, -2, 0) -(sin(pi*swing_progress)*6))",
					"left_arm.tz": " if(!is_riding&&!is_on_ground&&!is_aggressive&&is_in_water,-1,if(var.att==-1, -1, var.att==1, -6, -0.5 +if(is_riding, 0, clamp( 1-limb_speed,  0, 1)) +sin(torad(-45+90)+limb_swing/1.3)*2*limb_speed +sin((limb_swing/2+age)/80*-pi*2)/4) +if(is_riding, -2, 0))"
				}
			]
		},
		{
			"part": "hat",
			"id": "hat",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 12, -2, 8, 12, 4], "textureOffset": [16, 16], "sizeAdd": 1}
			],
			"submodels": [
				{
					"id": "right_arm",
					"invertAxis": "xy",
					"translate": [6, 24, 0]
				},
				{
					"id": "left_arm",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-6, 24, 0],
					"submodels": [
						{
							"id": "left_arm_sub_0",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [6, -24, 0]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-6, -22, 0],
			"boxes": [
				{"coordinates": [4, 12, -2, 4, 12, 4], "textureOffset": [40, 16], "sizeAdd": 1.2}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [6, -22, 0],
			"boxes": [
				{"coordinates": [-8, 12, -2, 4, 12, 4], "textureOffset": [40, 16], "sizeAdd": 1.1}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 16], "sizeAdd": 1}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [2, -12, 0],
			"submodels": [
				{
					"id": "left_leg_sub_0",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [0, 0, 0],
					"boxes": [
						{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [0, 16], "sizeAdd": 1}
					]
				}
			]
		}
	]
}
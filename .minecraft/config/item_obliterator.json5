{
  // -----------------------------------------------------------
  //              Item Obliterator by ElocinDev
  // -----------------------------------------------------------
  //  
  // How to add items?
  //   - They are json strings, so you need to separate each
  //     entry with a comma, except the last
  //   - If you start an entry with !, it will be treated as a regular expression
  //     Example: "!minecraft:.*_sword" to disable all swords
  //  
  // -----------------------------------------------------------
  // Do not touch this
  "configVersion": 2,
  // -----------------------------------------------------------
  // Items here will be unusable completely
  //    Example: minecraft:diamond
  "blacklisted_items": [
    "create:backpack",
    "selfexpression:dreams_mask_chestplate",
    "selfexpression:russian_cap_chestplate",
    "selfexpression:cloth",
    "selfexpression:skull_helmet",
    "selfexpression:glass_chestplate",
    "selfexpression:improved_chemical_protection_helmet",
    "selfexpression:improved_chemical_protection_chestplate",
    "selfexpression:improved_chemical_protection_leggings",
    "selfexpression:improved_chemical_protection_boots",
    "selfexpression:artem_andr_helmet",
    "selfexpression:redynines_helmet",
    "selfexpression:chemical_protection_helmet",
    "selfexpression:chemical_protection_chestplate",
    "selfexpression:chemical_protection_leggings",
    "selfexpression:chemical_protection_boots",
    "selfexpression:builder_boots",
    "selfexpression:builder_leggings",
    "selfexpression:builder_chestplate",
    "selfexpression:builder_helmet",
    "selfexpression:prisoner_leggings",
    "selfexpression:prisoner_chestplate",
    "selfexpression:straw_hat_helmet",
    "selfexpression:scarecrow_boots",
    "selfexpression:scarecrow_leggings",
    "selfexpression:scarecrow_chestplate",
    "selfexpression:scarecrow_helmet",
    "selfexpression:respirator_helmet",
    "selfexpression:crusader_boots",
    "selfexpression:crusader_leggings",
    "selfexpression:crusader_chestplate",
    "selfexpression:crusader_helmet",
    "selfexpression:truckmans_cap_chestplate",
    "selfexpression:cultist_leggings",
    "selfexpression:cultist_chestplate",
    "selfexpression:cultist_helmet",
    "selfexpression:crown_helmet",
    "selfexpression:captain_boots",
    "selfexpression:captain_leggings",
    "selfexpression:captain_chestplate",
    "selfexpression:captain_helmet",
    "selfexpression:horseman_helmet",
    "selfexpression:wolfs_skin_helmet",
    "selfexpression:festivity_helmet",
    "selfexpression:vinous_sweater_helmet",
    "selfexpression:courier_helmet",
    "selfexpression:shooter_helmet",
    "selfexpression:engineer_helmet",
    "selfexpression:apron_chestplate",
    "selfexpression:apron_leggings",
    "create_things_and_misc:spout_gun",
    "create_things_and_misc:spout_gun_water",
    "create_things_and_misc:spout_gun_lava",
    "create_things_and_misc:spout_gun_chocolate",
    "create_things_and_misc:spout_gun_honey",
    "create_things_and_misc:spout_gun_slime",
    "create_things_and_misc:sprinkler",
    "create_things_and_misc:sprinkler_head",
    "create_things_and_misc:mending_rune",
    "create_things_and_misc:train_stop",
    "create_things_and_misc:train_buffer",
    "create_things_and_misc:brass_speaker",
    "luminousworld:palm_sapling",
    "luminousworld:palm_leaves",
    "luminousworld:palm_wood",
    "luminousworld:palm_log",
    "luminousworld:palmplank",
    "luminousworld:palmstairs",
    "luminousworld:palmslab",
    "luminousworld:palmfence",
    "luminousworld:palmfencegate",
    "luminousworld:palmshelf",
    "luminousworld:palmtable",
    "luminousworld:palmtrapdoor",
    "luminousworld:palm_door",
    "luminousworld:crab_spawn_egg",
    "luminousworld:sand_crab_spawn_egg",
    "galosphere:glow_flare",
    "galosphere:spectre_flare",
    "balancedflight:ascended_flight_ring",
    "furniture:canvas",
    "furniture:pells",
    "furniture:bin",
    "furniture:trash_bag",
    "creategbd:beam_reactor_helmet",
    "endlessbiomes:white_radon_lamp",
    "endlessbiomes:light_gray_radon_lamp",
    "endlessbiomes:gray_radon_lamp",
    "endlessbiomes:black_radon_lamp",
    "endlessbiomes:brown_radon_lamp",
    "endlessbiomes:red_radon_lamp",
    "endlessbiomes:orange_radon_lamp",
    "endlessbiomes:yellow_radon_lamp",
    "endlessbiomes:lime_radon_lamp",
    "endlessbiomes:green_radon_lamp",
    "endlessbiomes:cyan_radon_lamp",
    "endlessbiomes:light_blue_radon_lamp",
    "endlessbiomes:blue_radon_lamp",
    "endlessbiomes:purple_radon_lamp",
    "endlessbiomes:magenta_radon_lamp",
    "endlessbiomes:pink_radon_lamp",
    "cavesanddepths:copper_lantern",
    "cavesanddepths:soul_copper_lantern",
    "enlightened_end:irradium_ore",
    "enlightened_end:raw_irradium_block",
    "enlightened_end:irradium_block",
    "enlightened_end:irradium_bricks",
    "enlightened_end:irradium_brick_stairs",
    "enlightened_end:irradium_brick_slab",
    "enlightened_end:irradium_brick_wall",
    "enlightened_end:nuclear_furnace",
    "enlightened_end:irradium_lamp",
    "enlightened_end:depleted_irradium_block",
    "enlightened_end:depleted_irradium_bricks",
    "enlightened_end:depleted_irradium_brick_stairs",
    "enlightened_end:depleted_irradium_brick_slab",
    "enlightened_end:depleted_irradium_brick_wall",
    "enlightened_end:nuclear_bomb",
    "enlightened_end:raw_irradium",
    "enlightened_end:irradium_bar",
    "enlightened_end:depleted_irradium_bar",
    "create_aquatic_ambitions:prismarine_alloy",
    "create_aquatic_ambitions:prismarine_alloy_block",
    "create_aquatic_ambitions:prismarine_rod",
    "create_aquatic_ambitions:polished_quartz_tine",
    "rpg_better_elder_guardian_1201:blessed_blade",
    "rpg_better_elder_guardian_1201:relic_scrap_guardian",
    "rpg_better_elder_guardian_1201:holy_water",
    "rpg_better_elder_guardian_1201:blessed_necklace",
    "rpg_better_elder_guardian_1201:guardian_clever",
    "whatareyouvotingfor:armadillo",
    "undead_revamp2:thelurker_spawn_egg",
    "undead_revamp2:clogger_spawn_egg",
    "undead_revamp2:theheavy_spawn_egg",
    "undead_revamp2:thepregnant_spawn_egg",
    "undead_revamp2:thespectre_spawn_egg",
    "undead_revamp2:the_moonflower_spawn_egg",
    "undead_revamp2:thegliter_spawn_egg",
    "undead_revamp2:bigsucker_spawn_egg",
    "undead_revamp2:thehunter_spawn_egg",
    "undead_revamp2:theordure_spawn_egg",
    "undead_revamp2:thebidy_spawn_egg",
    "undead_revamp2:slaveman_spawn_egg",
    "undead_revamp2:theimmortal_spawn_egg",
    "undead_revamp2:invisiimmortal_spawn_egg",
    "undead_revamp2:huntereye",
    "undead_revamp2:bostroxingot",
    "undead_revamp2:friedsucker",
    "undead_revamp2:suckermemebrane",
    "undead_revamp2:wincallerfan",
    "undead_revamp2:windtext",
    "undead_revamp2:huntersackred",
    "undead_revamp2:luckysack",
    "undead_revamp2:flightsack",
    "undead_revamp2:heavytooth",
    "undead_revamp2:chainsword",
    "undead_revamp2:bonedagger",
    "undead_revamp2:toothmace",
    "undead_revamp2:primodialarmour_helmet",
    "undead_revamp2:primodialarmour_chestplate",
    "undead_revamp2:primodialarmour_boots",
    "undead_revamp2:cloogerribs",
    "undead_revamp2:clogggerribswithbun",
    "undead_revamp2:arapoholiaspray",
    "undead_revamp2:spittea",
    "undead_revamp2:rareimmortalsummonblock",
    "etcetera:hammer",
    "etcetera:raw_bismuth_block",
    "etcetera:bismuth_block",
    "etcetera:bismuth_bars",
    "etcetera:nether_bismuth_ore",
    "etcetera:raw_bismuth",
    "etcetera:iridescent_concrete",
    "etcetera:iridescent_wool",
    "etcetera:iridescent_lantern",
    "etcetera:bismuth_ingot",
    "etcetera:iridescent_glazed_terracotta",
    "etcetera:iridescent_terracotta",
    "etcetera:iridescent_glass_pane",
    "etcetera:iridescent_glass",
    "rpg_better_elder_guardian_1201:guardian_clever",
    "whatareyouvotingfor:armadillo_scute",
    "whatareyouvotingfor:armadillo_spawn_egg",
    "whatareyouvotingfor:wolf_armour",
    "whatareyouvotingfor:armadillo_scute",
    "whatareyouvotingfor:armadillo_scute",
    "alexscavesdelight:pure_darkness_knife",
    "biomesoplenty:rose_quartz_chunk",
    "create:rose_quartz_block",
    "candlelight:tomato",
    "candlelight:tomato_seeds",
    "candlelight:tomato_crate",
    "candlelight:lettuce",
    "candlelight:lettuce_seeds",
    "candlelight:lettuce_crate",
    "upgrade_aquatic:white_bedroll",
    "upgrade_aquatic:light_gray_bedroll",
    "upgrade_aquatic:gray_bedroll",
    "upgrade_aquatic:black_bedroll",
    "upgrade_aquatic:brown_bedroll",
    "upgrade_aquatic:red_bedroll",
    "upgrade_aquatic:orange_bedroll",
    "upgrade_aquatic:yellow_bedroll",
    "upgrade_aquatic:lime_bedroll",
    "upgrade_aquatic:green_bedroll",
    "upgrade_aquatic:cyan_bedroll",
    "upgrade_aquatic:light_blue_bedroll",
    "upgrade_aquatic:blue_bedroll",
    "upgrade_aquatic:purple_bedroll",
    "upgrade_aquatic:magenta_bedroll",
    "upgrade_aquatic:pink_bedroll",
    "handcrafted:berry_jam_jar",
    "handcrafted:oven",
    "handcrafted:stackable_book",
    "mowziesmobs:thatch_block",
    "bakery:dough",
    "farmersdelight:wheat_dough",
    "candlelight:dough",
    "oceansdelight:elder_guardian_roll",
    "oceansdelight:cooked_elder_guardian_slice",
    "oceansdelight:elder_guardian_slice",
    "oceansdelight:elder_guardian_slab",
    "alexscavesdelight:cooked_heart_of_iron",
    "create_things_and_misc:sticky_boots_boots",
    "eeeabsmobs:tester_egg",
    "eeeabsmobs:animation_controller",
    "crittersandcompanions:clam",
    "luminousworld:penguin_spawn_egg",
    "luminousworld:baby_penguin_spawn_egg",
    "luminousworld:frost_golem_spawn_egg",
    "luminousworld:frost_golem_plaque",
    "luminousworld:frigid_horn",
    "undead_revamp2:bostroxslabs",
    "undead_revamp2:bostroxstairs",
    "undead_revamp2:blockofbostrox",
    "undead_revamp2:bostroxwall",
    "undead_revamp2:cobbledbostroxslab",
    "undead_revamp2:cobbledbostroxstairs",
    "undead_revamp2:bostrokestone",
    "undead_revamp2:rawbostrox",
    "undead_revamp2:bostroxore",
    "undead_revamp2:bostroxsword",
    "undead_revamp2:cobbledbostroxwall",
    "undead_revamp2:bostroxset_chestplate",
    "undead_revamp2:bostroxset_helmet",
    "undead_revamp2:bostroxset_boots",
    "upgrade_aquatic:elder_eye",
    "butcher:spikeddragonbone",
    "butcher:dragonbone",
    "butcher:dragonscale",
    "butcher:dragonsmithingtemplate",
    "butcher:cooked_dragon_meat",
    "butcher:rawdragonmeat",
    "butcher:elder_meat",
    "butcher:raweldermeat",
    "butcher:eldereye",
    "butcher:elder_spike",
    "butcher:elderguardiancorpse",
    "butcher:dragonscaleingot",
    "butcher:dragonscaleblock",
    "butcher:dragonscalearmor_chestplate",
    "butcher:dragonscalearmor_helmet",
    "butcher:dragonscalearmor_boots",
    "butcher:dragonscalearmor_leggings",
    "butcher:end_dragon_corpse",
    "butcher:witheredheart",
    "butcher:withercorpse",
    "butcher:sulfur",
    "butcher:spiketrap",
    "butcher:elderguardianeye_helmet",
    "butcher:bottledcrushedflowers",
    "butcher:crushedflowers",
    "ends_delight:dragon_tooth_knife",
    "ends_delight:dragon_tooth",
    "ends_delight:non_hatchable_dragon_egg",
    "undead_revamp2:deadclogger_spawn_egg",
    "undead_revamp2:invisiblebidy_spawn_egg",
    "cataclysm:deepling_priest_spawn_egg",
    "cataclysm:deepling_brute_spawn_egg",
    "cataclysm:deepling_spawn_egg",
    "cataclysm:deepling_warlock_spawn_egg",
    "cataclysm:deepling_angler_spawn_egg",
    "minecraft:recovery_compass",
    "etcetera:wrench",
    "mowziesmobs:naga_fang_dagger",
    "mowziesmobs:naga_fang",
    "mowziesmobs:naga_spawn_egg",
    "mowziesdelight:nagi_tail",
    "butcher:sulfurore",
    "obscure_api:astral_dust"
  ],
  /*
    "refurbished_furniture:cheese_sandwich",
    "refurbished_furniture:toast",
    "refurbished_furniture:bread_slice",
    "refurbished_furniture:glow_berry_jam",
    "refurbished_furniture:sweet_berry_jam",
    "refurbished_furniture:cheese",
    "refurbished_furniture:dough",
    "refurbished_furniture:wheat_flour",
    "refurbished_furniture:sea_salt",
    "refurbished_furniture:meatlovers_pizza_slice",
    "refurbished_furniture:cooked_meatlovers_pizza",
    "refurbished_furniture:raw_meatlovers_pizza",
    "refurbished_furniture:vegetable_pizza_slice",
    "refurbished_furniture:cooked_vegetable_pizza",
    "refurbished_furniture:raw_vegetable_pizza",
    "refurbished_furniture:glow_berry_jam_toast",
    "refurbished_furniture:sweet_berry_jam_toast",
    "refurbished_furniture:cheese_toastie",
  */
  // -----------------------------------------------------------
  // Removes an item if it contains certain nbt tag. If the whole entry (or expression) is present, the item gets removed.
  // Use with caution! This is a very expensive operation and can cause lag if you have a lot of items blacklisted.
  // 	
  // 	 Example to disable a regeneration potion: Potion:"minecraft:regeneration"
  // 	
  // 	 You can also use regular expressions by starting the value with !
  "blacklisted_nbt": [],
  // -----------------------------------------------------------
  // Items here will not be able to be right-clicked (Interact)
  //    Example: minecraft:apple
  "only_disable_interactions": [
    "examplemod:example_item"
  ],
  // -----------------------------------------------------------
  // Items here will not be able to be used to attack
  //    Example: minecraft:diamond_sword
  "only_disable_attacks": [
    "examplemod:example_item"
  ],
  // -----------------------------------------------------------
  // Items here will get their recipes disabled
  // Keep in mind this already is applied to blacklisted items
  "only_disable_recipes": [
    "examplemod:example_item"
  ],
  // -----------------------------------------------------------
  // If true, the mod will use a hashset to handle the blacklisted items
  // This is a more optimized approach only if you have a lot of items blacklisted (20 or more is recommended)
  // If you just have a small amount of items blacklisted, keep this false
  //  
  // [!] Enabling this will disable all regular expressions
  // [!] Does not apply to NBT, only item blacklist / interaction / attack
  "use_hashmap_optimizations": false
}